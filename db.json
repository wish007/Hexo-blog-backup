{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/README.md","hash":"0e91ca62fd21e971931a6c72b0c770643d9626e8","modified":1473265403216},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1460048683163},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1460048683163},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1460048683166},{"_id":"themes/hexo-theme-next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1460048683165},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1460048683166},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1460048683167},{"_id":"themes/hexo-theme-next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1460048683167},{"_id":"themes/hexo-theme-next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1460048683167},{"_id":"themes/hexo-theme-next/_config.yml","hash":"7272352ed99b3464a53eee13bb74bfabecc9767a","modified":1473440398619},{"_id":"themes/hexo-theme-next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1460048683168},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1460048683169},{"_id":"themes/hexo-theme-next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1460048683197},{"_id":"source/_posts/在Hexo中插入图片.md","hash":"d4d3fa29301a98ed2bbde27de97795750e0c7120","modified":1473266363558},{"_id":"source/_posts/搭建Django博客（1）环境准备与连接数据库.md","hash":"396fb5657c09842566bf3d05d1b22173185eadb3","modified":1473266351808},{"_id":"source/_posts/搭建Django博客（2）创建数据模型.md","hash":"41f7ef1fcc5af82975041856b0255ae568fcbeaa","modified":1473266353933},{"_id":"source/_posts/搭建Django博客（3）网页处理逻辑.md","hash":"dfc95098916c03c504d2f65b37a77ea8d24a535e","modified":1473266355519},{"_id":"source/_posts/搭建Django博客（4）多说评论框.md","hash":"96508a45e8e921de38eae4349f6ef48ae06d9b45","modified":1473266357707},{"_id":"source/_posts/搭建Django博客（5）Markdown语法显示文章.md","hash":"38f8d7798f7d11c7f66c2290400c301cfde5e30e","modified":1473266251659},{"_id":"source/_posts/搭建Django博客（6）代码高亮及后台Markdown编辑器.md","hash":"c5d2adb7968d3d009a5958270c640c25b555d10b","modified":1473266213179},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结.md","hash":"8181893bb0d5ce211e99127c625523cab52e483c","modified":1473437739342},{"_id":"source/_posts/用Hexo写博客.md","hash":"d37a636292aa70239bdc16db1ce7d7c1168cb04d","modified":1473266172618},{"_id":"source/categories/index.md","hash":"609f93fd96fdce2ab0bc7a21228fae05d9276930","modified":1460482909743},{"_id":"source/tags/index.md","hash":"73298e31e3e9d66151495edb921a96cb0482352d","modified":1460481362005},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1460048683164},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1460048683164},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1460048683169},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1460048683170},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1460048683170},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1460048683171},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1460048683171},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1460048683172},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1460048683172},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"23b45e77c1846c9457b98c745a60a9461678c389","modified":1460048683172},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1460048683173},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1460048683173},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"fc92da2b0f4d368e8ae4b08c7606e11e2180120b","modified":1460048683174},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1460048683194},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1460048683195},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1460048683195},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1460048683196},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1460048683196},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1460048683196},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1460048683198},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1460048683296},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1460048683296},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1460048683297},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683241},{"_id":"source/_posts/搭建Django博客（1）环境准备与连接数据库/WelcomeToDjango.png","hash":"2da02c3e64c2dfc4060613404a57bc8feb7f5902","modified":1472304450253},{"_id":"source/_posts/搭建Django博客（2）创建数据模型/admin.png","hash":"15250ad91ed8f5b361c516621f386e81be846503","modified":1473081162293},{"_id":"source/_posts/搭建Django博客（2）创建数据模型/login.png","hash":"a45646cd8350362be91d77b31cea1333bcf78d99","modified":1473080957905},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/home.png","hash":"ebc007df2642fb0f7a3038cfaa03deb5a01d6d04","modified":1473173395668},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1460048683175},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"b172044098acacdab1b0e3ed4a29600d0a6915df","modified":1460048683175},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"05cad11b3efcb8b7e74677bd7c13ad53d268476a","modified":1460048683176},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"3cff4179482865c7e51e4dd289372c3fc90c619c","modified":1460048683176},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1460048683177},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1460048683177},{"_id":"themes/hexo-theme-next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1460048683178},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"cba20577cea89196d714ddfe6b3ea00f7c906ba7","modified":1460048683178},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"9d6501b54b959d28a6e0b5fde87d25fc38b97660","modified":1460048683179},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"b3f4f07f03bedd615039934b44d552b91e2a4a1d","modified":1460048683179},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1460048683180},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1460048683180},{"_id":"themes/hexo-theme-next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1460048683184},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1460048683184},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1460048683185},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"1a51b8caa5130ff55948ae59dddb87ee0550c1e9","modified":1460048683194},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1460048683198},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1460048683199},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1460048683199},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1460048683241},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","hash":"8a2c9d144a2af093dec50e00911ea0e2c0564044","modified":1460052172962},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1460048683243},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1460048683242},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1460048683243},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1460048683245},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1460048683245},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1460048683244},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1460048683245},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1460048683246},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1460048683246},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1460048683246},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1460048683247},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1460048683247},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/archives.png","hash":"a620288af11ea69d152931b25ce978d0f970962d","modified":1473172563744},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/post.png","hash":"50668f00d5dc9a45f120877e90a5c6c60c226409","modified":1473172689971},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683186},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683186},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683225},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683226},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683227},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683238},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1460048683240},{"_id":"source/_posts/搭建Django博客（3）网页处理逻辑/flow.png","hash":"f99171ffb49e0b9da02d83c568ded7eb79872e40","modified":1473088588775},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1460048683181},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1460048683181},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1460048683181},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1460048683182},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1460048683182},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1460048683183},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1460048683183},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1460048683187},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1460048683185},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1460048683188},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1460048683190},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/lean-analytics.swig","hash":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1460048683192},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1460048683193},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/mathjax.swig","hash":"8eecd19c756df615afb3f5ec6a527cd7bd06d20c","modified":1460048683193},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1460048683193},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1460048683226},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1460048683227},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1460048683225},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1460048683238},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"6da593f19a9c8e76b43bc05172923d82b2aefa03","modified":1460048683239},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"8656fcb3770028857cbfb761a8b095eea3e839a4","modified":1460048683240},{"_id":"themes/hexo-theme-next/source/css/_variables/default.styl","hash":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1460048683240},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1460048683249},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1460048683248},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1460048683249},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1460048683250},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"b8c0b5563cc6edbac82ed5a4f43f72800029ea87","modified":1460048683250},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1460048683252},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"14521498ba62a9a4050b86fb1eae0babd5b88c8a","modified":1460048683252},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1460048683253},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1460048683253},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1460048683263},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1460048683264},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1460048683263},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1460048683264},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1460048683267},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1460048683267},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1460048683267},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1460048683268},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1460048683268},{"_id":"themes/hexo-theme-next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1460048683283},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1460048683286},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1460048683285},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1460048683286},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1460048683287},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1460048683287},{"_id":"themes/hexo-theme-next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1460048683288},{"_id":"themes/hexo-theme-next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1460048683290},{"_id":"themes/hexo-theme-next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1460048683291},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1460048683294},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1460048683294},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1460048683295},{"_id":"themes/hexo-theme-next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1460048683284},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1460048683188},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1460048683189},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1460048683189},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1460048683189},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1460048683190},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1460048683191},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"da8aa3beab56d8c306dd97cf41127a3859e2d00c","modified":1460048683192},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1460048683201},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1460048683200},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1460048683201},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1460048683202},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1460048683208},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1460048683217},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1460048683222},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"302fca2d38d0175f5b5c7c42bc80b5a87404a50d","modified":1460048683223},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1460048683223},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1460048683224},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"d110befc142dbb881c4fdcb94df65ed2f603f1c1","modified":1460048683224},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1460048683221},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1460048683228},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1460048683228},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1460048683229},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1460048683230},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1460048683231},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1460048683230},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"5187512cc4b2ce095230928c7046e0b26c3897bd","modified":1460048683231},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1460048683233},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1460048683233},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1460048683233},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1460048683234},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"f70fa81275eb4e0ea5e5a740b7a35539c6ffa9ba","modified":1460048683234},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"59c0f66602ebc1c05c16f117bc8710d9f3744538","modified":1460048683235},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1460048683235},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1460048683236},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1460048683236},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1460048683237},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"441eaadb55541a3721e7fbff92e5e2ed50859897","modified":1460048683237},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1460048683237},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1460048683251},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1460048683255},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1460048683254},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1460048683255},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1460048683256},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1460048683256},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1460048683257},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1460048683260},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1460048683261},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1460048683262},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1460048683265},{"_id":"themes/hexo-theme-next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1460048683266},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1460048683269},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1460048683270},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1460048683271},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1460048683282},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1460048683289},{"_id":"themes/hexo-theme-next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1460048683290},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1460048683273},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1460048683274},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1460048683281},{"_id":"themes/hexo-theme-next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1460048683293},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1460048683202},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1460048683203},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1460048683203},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1460048683203},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"f168f79ba8cc80c775907da4cc00d01771ac1e1e","modified":1460048683204},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1460048683204},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"4f7dfc2826a95a0d571976d9084b7e7175d99b0f","modified":1460048683205},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1460048683205},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"8539c1122966a6aea64267d48af05603caa5fa29","modified":1460048683206},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1460048683207},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1460048683207},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1460048683208},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"68ed6b0ad40745cb07ecd38f13960bb217aef848","modified":1460048683209},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1460048683210},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1460048683209},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1460048683210},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"5dba4ca272d7c767b57233cd99fba95dbf82153f","modified":1460048683210},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1460048683211},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1460048683211},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1460048683212},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1460048683212},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1460048683211},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"0e91a5a80fb62ed38c97cb649b166f945c6ce5f1","modified":1460048683213},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1460048683213},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"70407054dbb5180c69e50ea2655d32835494394e","modified":1460048683214},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1460048683214},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1460048683214},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1460048683215},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1460048683215},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1460048683215},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1460048683216},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"99c4b7d1459569cda394c733845d368008a180bf","modified":1460048683216},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1460048683217},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1460048683217},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1460048683218},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1460048683218},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1460048683219},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1460048683219},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1460048683220},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1460048683220},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"0f368e6e95c0ba46580b491819e46ae31910c94b","modified":1460048683220},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1460048683232},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1460048683257},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1460048683259},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1460048683259},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1460048683258},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1460048683259},{"_id":"themes/hexo-theme-next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1460048683260},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1460048683280},{"_id":"source/_posts/在Hexo中插入图片/mountain.jpg","hash":"1453fadd462d750e2e4d71ca24bad6ab7892ccc6","modified":1430899279090},{"_id":"themes/hexo-theme-next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1460048683278},{"_id":"public/atom.xml","hash":"a0cf840e48ccd63bd20d6a08c0dd21de5c5f1b74","modified":1473441123471},{"_id":"public/sitemap.xml","hash":"711cad69441cddd100abe60546ca8ec2eb8bed69","modified":1473441123471},{"_id":"public/categories/index.html","hash":"9d3859104aa8f46669b004361035161133008cc9","modified":1473441123471},{"_id":"public/tags/index.html","hash":"03ee0b1dd390b732f278757210868d2116326319","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（7）Django 博客搭建总结/index.html","hash":"a7d3e24017c05a9c4749a4fe768fc3f5da1d127e","modified":1473441123471},{"_id":"public/categories/Django/index.html","hash":"f56d820448c1b3a36d32fe867d1929522abb2044","modified":1473441123471},{"_id":"public/categories/Django/page/2/index.html","hash":"cdb963ec7cadc3e6987c9b0a3f13589a072205e3","modified":1473441123471},{"_id":"public/categories/Hexo/index.html","hash":"bab7092bd6a3adaa8c7cf235ecd22ee1bf4f35f3","modified":1473441123471},{"_id":"public/archives/index.html","hash":"eacb815f2b51e142e8e94958314a1db02376b097","modified":1473441123471},{"_id":"public/archives/2016/index.html","hash":"b9afb7a3a9b76fae701c792a7632c5f7f238b827","modified":1473441123471},{"_id":"public/archives/2016/09/index.html","hash":"5c835f8d7745530fcc5874053a3d35df464b093d","modified":1473441123471},{"_id":"public/tags/Django/index.html","hash":"ff38e72b9daef9ae8ca4da54feed0cc7f0937e4c","modified":1473441123471},{"_id":"public/tags/Hexo/index.html","hash":"96cbd67522093b6e2fa09f3b83402c9fdcb51604","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（6）代码高亮及后台Markdown编辑器/index.html","hash":"d91e03b83879a839963375f18dad25dbbb32efcb","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（5）Markdown语法显示文章/index.html","hash":"6706a3700c5bd788f7115fb1c5e39ee56343454a","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（4）多说评论框/index.html","hash":"f852783840af7d8d26c1180142ceb2e392a06a83","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（3）网页处理逻辑/index.html","hash":"df5edf6ec34016c519caf59fc31ea9ffaed38f6c","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（2）创建数据模型/index.html","hash":"3dc0d6e9ad533c41900dab69722939a86d4e87ad","modified":1473441123471},{"_id":"public/2016/09/05/搭建Django博客（1）环境准备与连接数据库/index.html","hash":"3e72051ec14a5a4af2e9770ebe3fb52339796349","modified":1473441123471},{"_id":"public/2016/09/05/在Hexo中插入图片/index.html","hash":"f8577cbc9857a3439f8c470015fb3557390ed923","modified":1473441123471},{"_id":"public/2016/09/03/用Hexo写博客/index.html","hash":"cdf0b52a05458098e82c0610f1cb5e26e145bfd9","modified":1473441123471},{"_id":"public/index.html","hash":"336a545c049f8e7149b535ee7324b807843b79ea","modified":1473441123471},{"_id":"public/page/2/index.html","hash":"e0a7903f84a40fc9540d9d94ca69e826cd6c48fc","modified":1473441123471},{"_id":"public/README.md","hash":"0e91ca62fd21e971931a6c72b0c770643d9626e8","modified":1473441123503},{"_id":"public/images/avatar.jpg","hash":"8a2c9d144a2af093dec50e00911ea0e2c0564044","modified":1473441123503},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1473441123503},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1473441123503},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1473441123503},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1473441123503},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1473441123503},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1473441123503},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1473441123503},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1473441123503},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1473441123503},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1473441123503},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1473441123503},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1473441123503},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1473441123503},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1473441123503},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1473441123503},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1473441123503},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1473441123503},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1473441123503},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1473441123503},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1473441123503},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1473441123503},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1473441123503},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1473441123503},{"_id":"public/2016/09/05/搭建Django博客（1）环境准备与连接数据库/WelcomeToDjango.png","hash":"2da02c3e64c2dfc4060613404a57bc8feb7f5902","modified":1473441123503},{"_id":"public/2016/09/05/搭建Django博客（2）创建数据模型/admin.png","hash":"15250ad91ed8f5b361c516621f386e81be846503","modified":1473441123503},{"_id":"public/2016/09/05/搭建Django博客（2）创建数据模型/login.png","hash":"a45646cd8350362be91d77b31cea1333bcf78d99","modified":1473441123503},{"_id":"public/2016/09/05/搭建Django博客（7）Django 博客搭建总结/home.png","hash":"ebc007df2642fb0f7a3038cfaa03deb5a01d6d04","modified":1473441123503},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1473441123987},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1473441123987},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1473441123987},{"_id":"public/2016/09/05/搭建Django博客（7）Django 博客搭建总结/archives.png","hash":"a620288af11ea69d152931b25ce978d0f970962d","modified":1473441123987},{"_id":"public/2016/09/05/搭建Django博客（7）Django 博客搭建总结/post.png","hash":"50668f00d5dc9a45f120877e90a5c6c60c226409","modified":1473441123987},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1473441124003},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1473441124003},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1473441124003},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1473441124003},{"_id":"public/js/src/post-details.js","hash":"10247c78fe933a0cfcaad22a2a03e7a026864461","modified":1473441124003},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1473441124003},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1473441124003},{"_id":"public/js/src/utils.js","hash":"a3a3375de818964f4cbed4d0e2c2f97ccee7199e","modified":1473441124003},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1473441124003},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1473441124003},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1473441124003},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1473441124003},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1473441124003},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1473441124003},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1473441124003},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1473441124003},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1473441124003},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1473441124003},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1473441124003},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1473441124003},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1473441124003},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1473441124003},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1473441124003},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1473441124003},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1473441124003},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1473441124003},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1473441124003},{"_id":"public/css/main.css","hash":"7dc3d957521c5f102e53fb39ae02eb22b66a889e","modified":1473441124003},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1473441124003},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1473441124003},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1473441124003},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1473441124003},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1473441124003},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1473441124003},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1473441124003},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1473441124003},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1473441124003},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1473441124003},{"_id":"public/2016/09/05/搭建Django博客（3）网页处理逻辑/flow.png","hash":"f99171ffb49e0b9da02d83c568ded7eb79872e40","modified":1473441124003},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1473441124018},{"_id":"public/2016/09/05/在Hexo中插入图片/mountain.jpg","hash":"1453fadd462d750e2e4d71ca24bad6ab7892ccc6","modified":1473441124034}],"Category":[{"name":"Django","_id":"cisw0su1s00050ccepr9ezot5"},{"name":"Hexo","_id":"cisw0su28000h0cceeegnyvxn"}],"Data":[],"Page":[{"title":"categories","date":"2016-04-12T17:39:43.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-04-13 01:39:43\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-04-12T17:41:49.743Z","path":"categories/index.html","layout":"page","_id":"cisw0su1d00010ccegjtzadz0","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-04-12T17:13:02.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-04-13 01:13:02\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-04-12T17:16:02.005Z","path":"tags/index.html","layout":"page","_id":"cisw0su1d00030ccez8zocnrv","content":"","excerpt":"","more":""}],"Post":[{"title":"搭建Django博客（2）创建数据模型","date":"2016-09-05T11:46:09.000Z","_content":"\n前面我们创建并连接了数据库，但我们没有向数据库写入任何数据，在 Django 中直接与数据库交互的是数据模型，可以通过数据模型实现对数据库的各种操作。\n\n# 创建博客文章的数据模型\n\nDjango 中用`models.py`文件中的一个类表示数据库中的一张表，类中的属性表示数据库中的一列。因此，我们可以编辑`models.py`文件来创建数据库表。\n\n\n<!--more-->\n\n\n现在我们来创建一个`Article`类，类中的`title` `category` `publish_time` `content`属性分别对应数据库中的一个列。\n\n```python\nfrom django.db import models\n\n# Create your models here.\n\nclass Article(models.Model):\n    title = models.CharField('标题',max_length=50)\n    category = models.CharField('分类',max_length=50, blank=True)\n    publish_time = models.DateField('发布时间',auto_now_add=True)\n    content = models.TextField('正文')\n    # 下面2个属性我觉得没啥必要就注释掉了，以后如果有需要再启用\n    # modify_date = models.DateField('修改日期',auto_now=True)\n    # author = models.CharField('作者',max_length=50)\n\n    class Meta:\n        db_table = 'article'  #数据库表名\n        ordering = ['-id']  # 按创建时分配的 id 倒序排列\n\n    def __str__(self):\n        return self.title\n```\n\n# 将博客应用注册到 Django\n\n编辑`setting.py`文件中的`INSTALLED_APPS`字段，加入应用名称；将创建的博客应用`blogapp`注册到 Django ，使应用的数据模型写入数据库。\n\n```python\nINSTALLED_APPS = [\n    'blogapp',  # 创建的 Django 应用 blogapp\n    'django.contrib.admin',  # Django 默认自带的应用\n    'django.contrib.auth',   # Django 默认自带的应用\n    'django.contrib.contenttypes',   # Django 默认自带的应用\n    'django.contrib.sessions',   # Django 默认自带的应用\n    'django.contrib.messages',   # Django 默认自带的应用\n    'django.contrib.staticfiles',   # Django 默认自带的应用\n]\n```\n\n现在我们已经准备好将自定义的数据模型写入数据库：\n\n```powershell\n$ python manage.py makemigratinons\n```\n\n*注意：执行上面命令后，会在`myblog/blogapp/migrations`文件夹下创建一个 python 迁移文件，但数据模型此时并未写入数据库*\n\n真正更新数据库的命令\n\n```powershell\n$ python manage.py migrate\n```\n# 登录 Django 后台管理页面\n\n我们已经在数据库中创建了表和列用来保存我们的数据，那我们怎么把各个列的数据写入数据库呢？显然，用 SQL 语句是可行的，但是，估计用不了多久你就会崩溃掉（微笑脸）\n\n贴心的 Django 已经为我们准备好易于操作的后台管理页面了，只需创建一个后台管理用户：\n\n```powershell\n$ python manage.py createsuperuser\n```\n\n创建用户后，打开[http://127.0.0.1:8000/admin/](http://127.0.0.1:8000/admin/)，使用刚刚创建的用户名和密码登录，看到下面的界面就表示成功了！\n\n{% asset_img login.png Login page %}\n\n{% asset_img admin.png Admin page %}","source":"_posts/搭建Django博客（2）创建数据模型.md","raw":"---\ntitle: 搭建Django博客（2）创建数据模型\ndate: 2016-09-05 19:46:09\ncategories: Django\ntags:\n- Django\n---\n\n前面我们创建并连接了数据库，但我们没有向数据库写入任何数据，在 Django 中直接与数据库交互的是数据模型，可以通过数据模型实现对数据库的各种操作。\n\n# 创建博客文章的数据模型\n\nDjango 中用`models.py`文件中的一个类表示数据库中的一张表，类中的属性表示数据库中的一列。因此，我们可以编辑`models.py`文件来创建数据库表。\n\n\n<!--more-->\n\n\n现在我们来创建一个`Article`类，类中的`title` `category` `publish_time` `content`属性分别对应数据库中的一个列。\n\n```python\nfrom django.db import models\n\n# Create your models here.\n\nclass Article(models.Model):\n    title = models.CharField('标题',max_length=50)\n    category = models.CharField('分类',max_length=50, blank=True)\n    publish_time = models.DateField('发布时间',auto_now_add=True)\n    content = models.TextField('正文')\n    # 下面2个属性我觉得没啥必要就注释掉了，以后如果有需要再启用\n    # modify_date = models.DateField('修改日期',auto_now=True)\n    # author = models.CharField('作者',max_length=50)\n\n    class Meta:\n        db_table = 'article'  #数据库表名\n        ordering = ['-id']  # 按创建时分配的 id 倒序排列\n\n    def __str__(self):\n        return self.title\n```\n\n# 将博客应用注册到 Django\n\n编辑`setting.py`文件中的`INSTALLED_APPS`字段，加入应用名称；将创建的博客应用`blogapp`注册到 Django ，使应用的数据模型写入数据库。\n\n```python\nINSTALLED_APPS = [\n    'blogapp',  # 创建的 Django 应用 blogapp\n    'django.contrib.admin',  # Django 默认自带的应用\n    'django.contrib.auth',   # Django 默认自带的应用\n    'django.contrib.contenttypes',   # Django 默认自带的应用\n    'django.contrib.sessions',   # Django 默认自带的应用\n    'django.contrib.messages',   # Django 默认自带的应用\n    'django.contrib.staticfiles',   # Django 默认自带的应用\n]\n```\n\n现在我们已经准备好将自定义的数据模型写入数据库：\n\n```powershell\n$ python manage.py makemigratinons\n```\n\n*注意：执行上面命令后，会在`myblog/blogapp/migrations`文件夹下创建一个 python 迁移文件，但数据模型此时并未写入数据库*\n\n真正更新数据库的命令\n\n```powershell\n$ python manage.py migrate\n```\n# 登录 Django 后台管理页面\n\n我们已经在数据库中创建了表和列用来保存我们的数据，那我们怎么把各个列的数据写入数据库呢？显然，用 SQL 语句是可行的，但是，估计用不了多久你就会崩溃掉（微笑脸）\n\n贴心的 Django 已经为我们准备好易于操作的后台管理页面了，只需创建一个后台管理用户：\n\n```powershell\n$ python manage.py createsuperuser\n```\n\n创建用户后，打开[http://127.0.0.1:8000/admin/](http://127.0.0.1:8000/admin/)，使用刚刚创建的用户名和密码登录，看到下面的界面就表示成功了！\n\n{% asset_img login.png Login page %}\n\n{% asset_img admin.png Admin page %}","slug":"搭建Django博客（2）创建数据模型","published":1,"updated":"2016-09-07T16:39:13.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su1d00000ccekgcc5thp","content":"<p>前面我们创建并连接了数据库，但我们没有向数据库写入任何数据，在 Django 中直接与数据库交互的是数据模型，可以通过数据模型实现对数据库的各种操作。</p>\n<h1 id=\"创建博客文章的数据模型\"><a href=\"#创建博客文章的数据模型\" class=\"headerlink\" title=\"创建博客文章的数据模型\"></a>创建博客文章的数据模型</h1><p>Django 中用<code>models.py</code>文件中的一个类表示数据库中的一张表，类中的属性表示数据库中的一列。因此，我们可以编辑<code>models.py</code>文件来创建数据库表。</p>\n<a id=\"more\"></a>\n<p>现在我们来创建一个<code>Article</code>类，类中的<code>title</code> <code>category</code> <code>publish_time</code> <code>content</code>属性分别对应数据库中的一个列。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    title = models.CharField(<span class=\"string\">'标题'</span>,max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    category = models.CharField(<span class=\"string\">'分类'</span>,max_length=<span class=\"number\">50</span>, blank=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    publish_time = models.DateField(<span class=\"string\">'发布时间'</span>,auto_now_add=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    content = models.TextField(<span class=\"string\">'正文'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 下面2个属性我觉得没啥必要就注释掉了，以后如果有需要再启用</span></span><br><span class=\"line\">    <span class=\"comment\"># modify_date = models.DateField('修改日期',auto_now=True)</span></span><br><span class=\"line\">    <span class=\"comment\"># author = models.CharField('作者',max_length=50)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'article'</span>  <span class=\"comment\">#数据库表名</span></span><br><span class=\"line\">        ordering = [<span class=\"string\">'-id'</span>]  <span class=\"comment\"># 按创建时分配的 id 倒序排列</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br></pre></td></tr></table></figure>\n<h1 id=\"将博客应用注册到-Django\"><a href=\"#将博客应用注册到-Django\" class=\"headerlink\" title=\"将博客应用注册到 Django\"></a>将博客应用注册到 Django</h1><p>编辑<code>setting.py</code>文件中的<code>INSTALLED_APPS</code>字段，加入应用名称；将创建的博客应用<code>blogapp</code>注册到 Django ，使应用的数据模型写入数据库。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'blogapp'</span>,  <span class=\"comment\"># 创建的 Django 应用 blogapp</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,  <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>现在我们已经准备好将自定义的数据模型写入数据库：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py makemigratinons</span><br></pre></td></tr></table></figure>\n<p><em>注意：执行上面命令后，会在<code>myblog/blogapp/migrations</code>文件夹下创建一个 python 迁移文件，但数据模型此时并未写入数据库</em></p>\n<p>真正更新数据库的命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py migrate</span><br></pre></td></tr></table></figure>\n<h1 id=\"登录-Django-后台管理页面\"><a href=\"#登录-Django-后台管理页面\" class=\"headerlink\" title=\"登录 Django 后台管理页面\"></a>登录 Django 后台管理页面</h1><p>我们已经在数据库中创建了表和列用来保存我们的数据，那我们怎么把各个列的数据写入数据库呢？显然，用 SQL 语句是可行的，但是，估计用不了多久你就会崩溃掉（微笑脸）</p>\n<p>贴心的 Django 已经为我们准备好易于操作的后台管理页面了，只需创建一个后台管理用户：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n<p>创建用户后，打开<a href=\"http://127.0.0.1:8000/admin/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8000/admin/</a>，使用刚刚创建的用户名和密码登录，看到下面的界面就表示成功了！</p>\n<img src=\"/2016/09/05/搭建Django博客（2）创建数据模型/login.png\" alt=\"Login page\" title=\"Login page\">\n<img src=\"/2016/09/05/搭建Django博客（2）创建数据模型/admin.png\" alt=\"Admin page\" title=\"Admin page\">","excerpt":"<p>前面我们创建并连接了数据库，但我们没有向数据库写入任何数据，在 Django 中直接与数据库交互的是数据模型，可以通过数据模型实现对数据库的各种操作。</p>\n<h1 id=\"创建博客文章的数据模型\"><a href=\"#创建博客文章的数据模型\" class=\"headerlink\" title=\"创建博客文章的数据模型\"></a>创建博客文章的数据模型</h1><p>Django 中用<code>models.py</code>文件中的一个类表示数据库中的一张表，类中的属性表示数据库中的一列。因此，我们可以编辑<code>models.py</code>文件来创建数据库表。</p>","more":"<p>现在我们来创建一个<code>Article</code>类，类中的<code>title</code> <code>category</code> <code>publish_time</code> <code>content</code>属性分别对应数据库中的一个列。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    title = models.CharField(<span class=\"string\">'标题'</span>,max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">    category = models.CharField(<span class=\"string\">'分类'</span>,max_length=<span class=\"number\">50</span>, blank=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    publish_time = models.DateField(<span class=\"string\">'发布时间'</span>,auto_now_add=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    content = models.TextField(<span class=\"string\">'正文'</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 下面2个属性我觉得没啥必要就注释掉了，以后如果有需要再启用</span></span><br><span class=\"line\">    <span class=\"comment\"># modify_date = models.DateField('修改日期',auto_now=True)</span></span><br><span class=\"line\">    <span class=\"comment\"># author = models.CharField('作者',max_length=50)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        db_table = <span class=\"string\">'article'</span>  <span class=\"comment\">#数据库表名</span></span><br><span class=\"line\">        ordering = [<span class=\"string\">'-id'</span>]  <span class=\"comment\"># 按创建时分配的 id 倒序排列</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br></pre></td></tr></table></figure>\n<h1 id=\"将博客应用注册到-Django\"><a href=\"#将博客应用注册到-Django\" class=\"headerlink\" title=\"将博客应用注册到 Django\"></a>将博客应用注册到 Django</h1><p>编辑<code>setting.py</code>文件中的<code>INSTALLED_APPS</code>字段，加入应用名称；将创建的博客应用<code>blogapp</code>注册到 Django ，使应用的数据模型写入数据库。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'blogapp'</span>,  <span class=\"comment\"># 创建的 Django 应用 blogapp</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,  <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,   <span class=\"comment\"># Django 默认自带的应用</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>现在我们已经准备好将自定义的数据模型写入数据库：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py makemigratinons</span><br></pre></td></tr></table></figure>\n<p><em>注意：执行上面命令后，会在<code>myblog/blogapp/migrations</code>文件夹下创建一个 python 迁移文件，但数据模型此时并未写入数据库</em></p>\n<p>真正更新数据库的命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py migrate</span><br></pre></td></tr></table></figure>\n<h1 id=\"登录-Django-后台管理页面\"><a href=\"#登录-Django-后台管理页面\" class=\"headerlink\" title=\"登录 Django 后台管理页面\"></a>登录 Django 后台管理页面</h1><p>我们已经在数据库中创建了表和列用来保存我们的数据，那我们怎么把各个列的数据写入数据库呢？显然，用 SQL 语句是可行的，但是，估计用不了多久你就会崩溃掉（微笑脸）</p>\n<p>贴心的 Django 已经为我们准备好易于操作的后台管理页面了，只需创建一个后台管理用户：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py createsuperuser</span><br></pre></td></tr></table></figure>\n<p>创建用户后，打开<a href=\"http://127.0.0.1:8000/admin/\">http://127.0.0.1:8000/admin/</a>，使用刚刚创建的用户名和密码登录，看到下面的界面就表示成功了！</p>\n<img src=\"/2016/09/05/搭建Django博客（2）创建数据模型/login.png\" alt=\"Login page\" title=\"Login page\">\n<img src=\"/2016/09/05/搭建Django博客（2）创建数据模型/admin.png\" alt=\"Admin page\" title=\"Admin page\">"},{"title":"搭建Django博客（1）环境准备与连接数据库","date":"2016-09-05T10:46:00.000Z","_content":"\n# 环境准备\n\n> 因为我使用的是 Windows 系统，下面所有的操作都是在 Windows 系统下进行的，大部分操作和 Linux、macOS 相似，但有些地方要注意区分。\n\n使用 CMD 命令行创建 Python 虚拟环境，并在虚拟环境中安装 Django\n\n```powershell\n$ virtualenv [虚拟环境名]\n$ pip install django\n```\n\n\n<!--more-->\n\n\n- 在 PyCharm 中创建 Django 项目，并选择刚刚创建的虚拟环境为其解释器，完成后将在指定目录生成 Django 基本目录及文件。\n- 当然，也可以使用 CMD 命令行创建 Django 项目（我创建的项目名是：myblog）：\n\n```powershell\n$ 虚拟环境目录\\Scripts\\django-admin startproject [项目名]\n$ 虚拟环境目录\\Scripts\\django-admin startproject myblog\n```\n\n运行 Django 项目：\n\n```powershell\n$ python manage.py runserver\n```\n\n打开 http://127.0.0.1:8000/ 页面出现如下页面表示 Django 安装成功\n\n{% asset_img WelcomeToDjango.png Welcome to Django %}\n\n创建 Django 项目内的应用（我创建的应用名：blogapp）：\n\n```powershell\n$ python manage.py startapp [应用名]\n$ python manage.py startapp blogapp\n```\n\n# 安装数据库\n\nDjango 官方支持 PostgreSQL、MySQL、SQLite和Oracle 数据库，还有许多第三方提供的数据库也支持在 Django 中使用：SAP SQL Anywhere、IBM DB2、Microsoft SQL Server、Firebird、ODBC\n\n为了方便和在网上能够找到更多资源，我直接选择了官方支持的 PostgreSQL 数据库，下面开始安装：\n\n1. 登陆 PostgreSQL 官网下载数据库直接安装\n\n   https://www.postgresql.org/\n\n2. 安装 psycopg2 扩展让 Django 连接 PostgreSQL 数据库：\n\n   http://initd.org/psycopg/\n\n   CMD 安装 psycopg2 命令：\n\n```powershell\n$ easy_install [安装包名]\n例如：\n$ easy_install psycopg2-2.6.2.win32-py3.4-pg9.5.3-release.exe\n```\n\n*注意：Python 32/64位要对应下载 psycopg2 32/64位程序，否则 Django 连接数据库时会报错；但 PostgreSQL 安装32/64位都没问题*\n\n# **连接数据库**\n\n要连接数据库，当然要先新建一个数据库，直接在 PostgreSQL 管理工具里新建即可，这里数据库取名 `blog`，所有者为 `postgres`\n\n编辑 Django 项目的 `setting.py` 文件中的 `DATABASES`字段，填入数据库信息：\n\n```powershell\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql', #PostgreSQL数据库规定写法\n        'NAME': 'blog', #数据库名称\n        'USER': 'postgres', #数据库用户\n        'PASSWORD': '123', #数据库密码\n        'HOST': '127.0.0.1', #数据库所在的IP地址\n        'PORT': '5432', #连接数据库的端口号\n    }\n}\n```\n\n到这里就成功连接数据库了！","source":"_posts/搭建Django博客（1）环境准备与连接数据库.md","raw":"---\ntitle: 搭建Django博客（1）环境准备与连接数据库\ndate: 2016-09-05 18:46:00\ncategories: Django\ntags:\n- Django\n---\n\n# 环境准备\n\n> 因为我使用的是 Windows 系统，下面所有的操作都是在 Windows 系统下进行的，大部分操作和 Linux、macOS 相似，但有些地方要注意区分。\n\n使用 CMD 命令行创建 Python 虚拟环境，并在虚拟环境中安装 Django\n\n```powershell\n$ virtualenv [虚拟环境名]\n$ pip install django\n```\n\n\n<!--more-->\n\n\n- 在 PyCharm 中创建 Django 项目，并选择刚刚创建的虚拟环境为其解释器，完成后将在指定目录生成 Django 基本目录及文件。\n- 当然，也可以使用 CMD 命令行创建 Django 项目（我创建的项目名是：myblog）：\n\n```powershell\n$ 虚拟环境目录\\Scripts\\django-admin startproject [项目名]\n$ 虚拟环境目录\\Scripts\\django-admin startproject myblog\n```\n\n运行 Django 项目：\n\n```powershell\n$ python manage.py runserver\n```\n\n打开 http://127.0.0.1:8000/ 页面出现如下页面表示 Django 安装成功\n\n{% asset_img WelcomeToDjango.png Welcome to Django %}\n\n创建 Django 项目内的应用（我创建的应用名：blogapp）：\n\n```powershell\n$ python manage.py startapp [应用名]\n$ python manage.py startapp blogapp\n```\n\n# 安装数据库\n\nDjango 官方支持 PostgreSQL、MySQL、SQLite和Oracle 数据库，还有许多第三方提供的数据库也支持在 Django 中使用：SAP SQL Anywhere、IBM DB2、Microsoft SQL Server、Firebird、ODBC\n\n为了方便和在网上能够找到更多资源，我直接选择了官方支持的 PostgreSQL 数据库，下面开始安装：\n\n1. 登陆 PostgreSQL 官网下载数据库直接安装\n\n   https://www.postgresql.org/\n\n2. 安装 psycopg2 扩展让 Django 连接 PostgreSQL 数据库：\n\n   http://initd.org/psycopg/\n\n   CMD 安装 psycopg2 命令：\n\n```powershell\n$ easy_install [安装包名]\n例如：\n$ easy_install psycopg2-2.6.2.win32-py3.4-pg9.5.3-release.exe\n```\n\n*注意：Python 32/64位要对应下载 psycopg2 32/64位程序，否则 Django 连接数据库时会报错；但 PostgreSQL 安装32/64位都没问题*\n\n# **连接数据库**\n\n要连接数据库，当然要先新建一个数据库，直接在 PostgreSQL 管理工具里新建即可，这里数据库取名 `blog`，所有者为 `postgres`\n\n编辑 Django 项目的 `setting.py` 文件中的 `DATABASES`字段，填入数据库信息：\n\n```powershell\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql', #PostgreSQL数据库规定写法\n        'NAME': 'blog', #数据库名称\n        'USER': 'postgres', #数据库用户\n        'PASSWORD': '123', #数据库密码\n        'HOST': '127.0.0.1', #数据库所在的IP地址\n        'PORT': '5432', #连接数据库的端口号\n    }\n}\n```\n\n到这里就成功连接数据库了！","slug":"搭建Django博客（1）环境准备与连接数据库","published":1,"updated":"2016-09-07T16:39:11.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su1d00020ccekhyyky5o","content":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><blockquote>\n<p>因为我使用的是 Windows 系统，下面所有的操作都是在 Windows 系统下进行的，大部分操作和 Linux、macOS 相似，但有些地方要注意区分。</p>\n</blockquote>\n<p>使用 CMD 命令行创建 Python 虚拟环境，并在虚拟环境中安装 Django</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ virtualenv [虚拟环境名]</span><br><span class=\"line\">$ pip install django</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<ul>\n<li>在 PyCharm 中创建 Django 项目，并选择刚刚创建的虚拟环境为其解释器，完成后将在指定目录生成 Django 基本目录及文件。</li>\n<li>当然，也可以使用 CMD 命令行创建 Django 项目（我创建的项目名是：myblog）：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ 虚拟环境目录\\Scripts\\django-admin startproject [项目名]</span><br><span class=\"line\">$ 虚拟环境目录\\Scripts\\django-admin startproject myblog</span><br></pre></td></tr></table></figure>\n<p>运行 Django 项目：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py runserver</span><br></pre></td></tr></table></figure>\n<p>打开 <a href=\"http://127.0.0.1:8000/\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8000/</a> 页面出现如下页面表示 Django 安装成功</p>\n<img src=\"/2016/09/05/搭建Django博客（1）环境准备与连接数据库/WelcomeToDjango.png\" alt=\"Welcome to Django\" title=\"Welcome to Django\">\n<p>创建 Django 项目内的应用（我创建的应用名：blogapp）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py startapp [应用名]</span><br><span class=\"line\">$ python manage.py startapp blogapp</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h1><p>Django 官方支持 PostgreSQL、MySQL、SQLite和Oracle 数据库，还有许多第三方提供的数据库也支持在 Django 中使用：SAP SQL Anywhere、IBM DB2、Microsoft SQL Server、Firebird、ODBC</p>\n<p>为了方便和在网上能够找到更多资源，我直接选择了官方支持的 PostgreSQL 数据库，下面开始安装：</p>\n<ol>\n<li><p>登陆 PostgreSQL 官网下载数据库直接安装</p>\n<p><a href=\"https://www.postgresql.org/\" target=\"_blank\" rel=\"external\">https://www.postgresql.org/</a></p>\n</li>\n<li><p>安装 psycopg2 扩展让 Django 连接 PostgreSQL 数据库：</p>\n<p><a href=\"http://initd.org/psycopg/\" target=\"_blank\" rel=\"external\">http://initd.org/psycopg/</a></p>\n<p>CMD 安装 psycopg2 命令：</p>\n</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ easy_install [安装包名]</span><br><span class=\"line\">例如：</span><br><span class=\"line\">$ easy_install psycopg2-<span class=\"number\">2.6</span>.<span class=\"number\">2</span>.win32-py3.<span class=\"number\">4</span>-pg9.<span class=\"number\">5.3</span>-release.exe</span><br></pre></td></tr></table></figure>\n<p><em>注意：Python 32/64位要对应下载 psycopg2 32/64位程序，否则 Django 连接数据库时会报错；但 PostgreSQL 安装32/64位都没问题</em></p>\n<h1 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a><strong>连接数据库</strong></h1><p>要连接数据库，当然要先新建一个数据库，直接在 PostgreSQL 管理工具里新建即可，这里数据库取名 <code>blog</code>，所有者为 <code>postgres</code></p>\n<p>编辑 Django 项目的 <code>setting.py</code> 文件中的 <code>DATABASES</code>字段，填入数据库信息：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.postgresql'</span>, <span class=\"comment\">#PostgreSQL数据库规定写法</span></span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'blog'</span>, <span class=\"comment\">#数据库名称</span></span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'postgres'</span>, <span class=\"comment\">#数据库用户</span></span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'123'</span>, <span class=\"comment\">#数据库密码</span></span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"comment\">#数据库所在的IP地址</span></span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>: <span class=\"string\">'5432'</span>, <span class=\"comment\">#连接数据库的端口号</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>到这里就成功连接数据库了！</p>\n","excerpt":"<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><blockquote>\n<p>因为我使用的是 Windows 系统，下面所有的操作都是在 Windows 系统下进行的，大部分操作和 Linux、macOS 相似，但有些地方要注意区分。</p>\n</blockquote>\n<p>使用 CMD 命令行创建 Python 虚拟环境，并在虚拟环境中安装 Django</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ virtualenv [虚拟环境名]</span><br><span class=\"line\">$ pip install django</span><br></pre></td></tr></table></figure>","more":"<ul>\n<li>在 PyCharm 中创建 Django 项目，并选择刚刚创建的虚拟环境为其解释器，完成后将在指定目录生成 Django 基本目录及文件。</li>\n<li>当然，也可以使用 CMD 命令行创建 Django 项目（我创建的项目名是：myblog）：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ 虚拟环境目录\\Scripts\\django-admin startproject [项目名]</span><br><span class=\"line\">$ 虚拟环境目录\\Scripts\\django-admin startproject myblog</span><br></pre></td></tr></table></figure>\n<p>运行 Django 项目：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py runserver</span><br></pre></td></tr></table></figure>\n<p>打开 <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a> 页面出现如下页面表示 Django 安装成功</p>\n<img src=\"/2016/09/05/搭建Django博客（1）环境准备与连接数据库/WelcomeToDjango.png\" alt=\"Welcome to Django\" title=\"Welcome to Django\">\n<p>创建 Django 项目内的应用（我创建的应用名：blogapp）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py startapp [应用名]</span><br><span class=\"line\">$ python manage.py startapp blogapp</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h1><p>Django 官方支持 PostgreSQL、MySQL、SQLite和Oracle 数据库，还有许多第三方提供的数据库也支持在 Django 中使用：SAP SQL Anywhere、IBM DB2、Microsoft SQL Server、Firebird、ODBC</p>\n<p>为了方便和在网上能够找到更多资源，我直接选择了官方支持的 PostgreSQL 数据库，下面开始安装：</p>\n<ol>\n<li><p>登陆 PostgreSQL 官网下载数据库直接安装</p>\n<p><a href=\"https://www.postgresql.org/\">https://www.postgresql.org/</a></p>\n</li>\n<li><p>安装 psycopg2 扩展让 Django 连接 PostgreSQL 数据库：</p>\n<p><a href=\"http://initd.org/psycopg/\">http://initd.org/psycopg/</a></p>\n<p>CMD 安装 psycopg2 命令：</p>\n</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ easy_install [安装包名]</span><br><span class=\"line\">例如：</span><br><span class=\"line\">$ easy_install psycopg2-<span class=\"number\">2.6</span>.<span class=\"number\">2</span>.win32-py3.<span class=\"number\">4</span>-pg9.<span class=\"number\">5.3</span>-release.exe</span><br></pre></td></tr></table></figure>\n<p><em>注意：Python 32/64位要对应下载 psycopg2 32/64位程序，否则 Django 连接数据库时会报错；但 PostgreSQL 安装32/64位都没问题</em></p>\n<h1 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a><strong>连接数据库</strong></h1><p>要连接数据库，当然要先新建一个数据库，直接在 PostgreSQL 管理工具里新建即可，这里数据库取名 <code>blog</code>，所有者为 <code>postgres</code></p>\n<p>编辑 Django 项目的 <code>setting.py</code> 文件中的 <code>DATABASES</code>字段，填入数据库信息：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATABASES = &#123;</span><br><span class=\"line\">    <span class=\"string\">'default'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'ENGINE'</span>: <span class=\"string\">'django.db.backends.postgresql'</span>, <span class=\"comment\">#PostgreSQL数据库规定写法</span></span><br><span class=\"line\">        <span class=\"string\">'NAME'</span>: <span class=\"string\">'blog'</span>, <span class=\"comment\">#数据库名称</span></span><br><span class=\"line\">        <span class=\"string\">'USER'</span>: <span class=\"string\">'postgres'</span>, <span class=\"comment\">#数据库用户</span></span><br><span class=\"line\">        <span class=\"string\">'PASSWORD'</span>: <span class=\"string\">'123'</span>, <span class=\"comment\">#数据库密码</span></span><br><span class=\"line\">        <span class=\"string\">'HOST'</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"comment\">#数据库所在的IP地址</span></span><br><span class=\"line\">        <span class=\"string\">'PORT'</span>: <span class=\"string\">'5432'</span>, <span class=\"comment\">#连接数据库的端口号</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>到这里就成功连接数据库了！</p>"},{"title":"在Hexo中插入图片","date":"2016-09-04T16:55:19.000Z","_content":"\n# 最简便的方法\n\n如果你的Hexo项目中只有少量图片，那最简单的方法就是将图片放在`source/images` 文件夹中；然后在文章中通过类似于 `![](/images/image.jpg)` 的方法访问它们；但是当文章多了以后，这种方式显然不便于管理文章中图片。\n\n\n<!--more-->\n\n\n# 更好的方法\n\nHexo 提供了更组织化的方式来管理资源，可以通过修改`_config.yml`配置文件中的`post_asset_folder`选项为`ture`来打开\n\n```bash\npost_asset_folder: true\n```\n\n当资源文件管理功能打开后，Hexo将会在你每一次通过 `hexo new <title> `命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 Markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的管理方式。\n\n虽然你仍然可以使用常规的 Markdown 语法访问资源，但在 Hexo 中更推荐以下方式引用（图片将会同时出现在文章、主页以及归档页中）\n\n```bash\n{% asset_img example.jpg This is an example image %}\n```\n\n例如：\n\n{% asset_img mountain.jpg This is an example image %}","source":"_posts/在Hexo中插入图片.md","raw":"---\ntitle: 在Hexo中插入图片\ndate: 2016-09-05 00:55:19\ncategories: Hexo\ntags:\n- Hexo\n---\n\n# 最简便的方法\n\n如果你的Hexo项目中只有少量图片，那最简单的方法就是将图片放在`source/images` 文件夹中；然后在文章中通过类似于 `![](/images/image.jpg)` 的方法访问它们；但是当文章多了以后，这种方式显然不便于管理文章中图片。\n\n\n<!--more-->\n\n\n# 更好的方法\n\nHexo 提供了更组织化的方式来管理资源，可以通过修改`_config.yml`配置文件中的`post_asset_folder`选项为`ture`来打开\n\n```bash\npost_asset_folder: true\n```\n\n当资源文件管理功能打开后，Hexo将会在你每一次通过 `hexo new <title> `命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 Markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的管理方式。\n\n虽然你仍然可以使用常规的 Markdown 语法访问资源，但在 Hexo 中更推荐以下方式引用（图片将会同时出现在文章、主页以及归档页中）\n\n```bash\n{% asset_img example.jpg This is an example image %}\n```\n\n例如：\n\n{% asset_img mountain.jpg This is an example image %}","slug":"在Hexo中插入图片","published":1,"updated":"2016-09-07T16:39:23.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su1s00060ccehbms1yyt","content":"<h1 id=\"最简便的方法\"><a href=\"#最简便的方法\" class=\"headerlink\" title=\"最简便的方法\"></a>最简便的方法</h1><p>如果你的Hexo项目中只有少量图片，那最简单的方法就是将图片放在<code>source/images</code> 文件夹中；然后在文章中通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们；但是当文章多了以后，这种方式显然不便于管理文章中图片。</p>\n<a id=\"more\"></a>\n<h1 id=\"更好的方法\"><a href=\"#更好的方法\" class=\"headerlink\" title=\"更好的方法\"></a>更好的方法</h1><p>Hexo 提供了更组织化的方式来管理资源，可以通过修改<code>_config.yml</code>配置文件中的<code>post_asset_folder</code>选项为<code>ture</code>来打开</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new &lt;title&gt;</code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 Markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的管理方式。</p>\n<p>虽然你仍然可以使用常规的 Markdown 语法访问资源，但在 Hexo 中更推荐以下方式引用（图片将会同时出现在文章、主页以及归档页中）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<img src=\"/2016/09/05/在Hexo中插入图片/mountain.jpg\" alt=\"This is an example image\" title=\"This is an example image\">","excerpt":"<h1 id=\"最简便的方法\"><a href=\"#最简便的方法\" class=\"headerlink\" title=\"最简便的方法\"></a>最简便的方法</h1><p>如果你的Hexo项目中只有少量图片，那最简单的方法就是将图片放在<code>source/images</code> 文件夹中；然后在文章中通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们；但是当文章多了以后，这种方式显然不便于管理文章中图片。</p>","more":"<h1 id=\"更好的方法\"><a href=\"#更好的方法\" class=\"headerlink\" title=\"更好的方法\"></a>更好的方法</h1><p>Hexo 提供了更组织化的方式来管理资源，可以通过修改<code>_config.yml</code>配置文件中的<code>post_asset_folder</code>选项为<code>ture</code>来打开</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new &lt;title&gt;</code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 Markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的管理方式。</p>\n<p>虽然你仍然可以使用常规的 Markdown 语法访问资源，但在 Hexo 中更推荐以下方式引用（图片将会同时出现在文章、主页以及归档页中）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<img src=\"/2016/09/05/在Hexo中插入图片/mountain.jpg\" alt=\"This is an example image\" title=\"This is an example image\">"},{"title":"搭建Django博客（3）网页处理逻辑","date":"2016-09-05T13:18:32.000Z","_content":"\n# 网页程序的逻辑\n\n先看一下 Django 处理请求的流程\n\n{% asset_img flow.png Django 请求处理流程 %}\n\nrequest 进来-->`urls.py`根据 url 指配处理函数-->`views.py`处理 request 请求-->返回 response\n\n\n<!--more-->\n\n\n# URL 调度器 urls.py\n\n编写`urls.py`将 request 请求传递给`views.py`相应的函数处理\n\n```python\nfrom django.conf.urls import url\nfrom django.contrib import admin\nfrom blogapp import views\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),  # 匹配传递给管理页面函数\n    url(r'^$', views.home),  # 匹配传递给 home 视图函数\n]\n```\n\n# Views 视图函数 views.py\n\n编写`views.py`处理由`urls.py`转来的 request 请求，home 视图函数处理完后返回 response\n\n```python\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n\n# Create your views here.\ndef home(request):\n    return HttpResponse(\"Hello World, Django\")\n```\n\n# 模板Templates\n\n为了使返回的 response 达到更好的显示效果，可以让视图函数加载模板处理后再返回。\n\n在`setting.py`的 `TEMPLATES` 设置模板文件的存放路径\n\n```python\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 设置模板文件路径\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n相应的也要修改 `views.py`中的视图函数，将`request 请求`、`模板文件`和`参数`传入传递函数`render`渲染后返回\n\n```python\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom blogapp.models import Article\n\n# Create your views here.\ndef home(request):\n    posts_list = Article.objects.all()\n    return render(request, 'home.html', {'post_list' : post_list})\n```\n\n在`templates`文件夹编写`home.html`文件\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n    {% for post in post_list %}\n        标题：<a href=\"{{ post.id }}\">{{ post.title }}</a>\n        发布时间： <a class=\"post-author\" href=\"\">{{ post.publish_time |date:\"Y/m/d\"}}</a>\n        分类： <a class=\"post-category post-category-yui\" href=\"/categories/\">{{ post.category }}</a>\n        正文： <p>{{ post.content }}</p>\n    {% endfor %}\n\n</body>\n</html>\n```","source":"_posts/搭建Django博客（3）网页处理逻辑.md","raw":"---\ntitle: 搭建Django博客（3）网页处理逻辑\ndate: 2016-09-05 21:18:32\ncategories: Django\ntags:\n- Django\n---\n\n# 网页程序的逻辑\n\n先看一下 Django 处理请求的流程\n\n{% asset_img flow.png Django 请求处理流程 %}\n\nrequest 进来-->`urls.py`根据 url 指配处理函数-->`views.py`处理 request 请求-->返回 response\n\n\n<!--more-->\n\n\n# URL 调度器 urls.py\n\n编写`urls.py`将 request 请求传递给`views.py`相应的函数处理\n\n```python\nfrom django.conf.urls import url\nfrom django.contrib import admin\nfrom blogapp import views\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),  # 匹配传递给管理页面函数\n    url(r'^$', views.home),  # 匹配传递给 home 视图函数\n]\n```\n\n# Views 视图函数 views.py\n\n编写`views.py`处理由`urls.py`转来的 request 请求，home 视图函数处理完后返回 response\n\n```python\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\n\n# Create your views here.\ndef home(request):\n    return HttpResponse(\"Hello World, Django\")\n```\n\n# 模板Templates\n\n为了使返回的 response 达到更好的显示效果，可以让视图函数加载模板处理后再返回。\n\n在`setting.py`的 `TEMPLATES` 设置模板文件的存放路径\n\n```python\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 设置模板文件路径\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n相应的也要修改 `views.py`中的视图函数，将`request 请求`、`模板文件`和`参数`传入传递函数`render`渲染后返回\n\n```python\nfrom django.shortcuts import render\nfrom django.http import HttpResponse\nfrom blogapp.models import Article\n\n# Create your views here.\ndef home(request):\n    posts_list = Article.objects.all()\n    return render(request, 'home.html', {'post_list' : post_list})\n```\n\n在`templates`文件夹编写`home.html`文件\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n<body>\n\n    {% for post in post_list %}\n        标题：<a href=\"{{ post.id }}\">{{ post.title }}</a>\n        发布时间： <a class=\"post-author\" href=\"\">{{ post.publish_time |date:\"Y/m/d\"}}</a>\n        分类： <a class=\"post-category post-category-yui\" href=\"/categories/\">{{ post.category }}</a>\n        正文： <p>{{ post.content }}</p>\n    {% endfor %}\n\n</body>\n</html>\n```","slug":"搭建Django博客（3）网页处理逻辑","published":1,"updated":"2016-09-07T16:39:15.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su1s00070cce8y1d04hz","content":"<h1 id=\"网页程序的逻辑\"><a href=\"#网页程序的逻辑\" class=\"headerlink\" title=\"网页程序的逻辑\"></a>网页程序的逻辑</h1><p>先看一下 Django 处理请求的流程</p>\n<img src=\"/2016/09/05/搭建Django博客（3）网页处理逻辑/flow.png\" alt=\"Django 请求处理流程\" title=\"Django 请求处理流程\">\n<p>request 进来–&gt;<code>urls.py</code>根据 url 指配处理函数–&gt;<code>views.py</code>处理 request 请求–&gt;返回 response</p>\n<a id=\"more\"></a>\n<h1 id=\"URL-调度器-urls-py\"><a href=\"#URL-调度器-urls-py\" class=\"headerlink\" title=\"URL 调度器 urls.py\"></a>URL 调度器 urls.py</h1><p>编写<code>urls.py</code>将 request 请求传递给<code>views.py</code>相应的函数处理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),  <span class=\"comment\"># 匹配传递给管理页面函数</span></span><br><span class=\"line\">    url(<span class=\"string\">r'^$'</span>, views.home),  <span class=\"comment\"># 匹配传递给 home 视图函数</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h1 id=\"Views-视图函数-views-py\"><a href=\"#Views-视图函数-views-py\" class=\"headerlink\" title=\"Views 视图函数 views.py\"></a>Views 视图函数 views.py</h1><p>编写<code>views.py</code>处理由<code>urls.py</code>转来的 request 请求，home 视图函数处理完后返回 response</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">\"Hello World, Django\"</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"模板Templates\"><a href=\"#模板Templates\" class=\"headerlink\" title=\"模板Templates\"></a>模板Templates</h1><p>为了使返回的 response 达到更好的显示效果，可以让视图函数加载模板处理后再返回。</p>\n<p>在<code>setting.py</code>的 <code>TEMPLATES</code> 设置模板文件的存放路径</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">'templates'</span>)],  <span class=\"comment\"># 设置模板文件路径</span></span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>相应的也要修改 <code>views.py</code>中的视图函数，将<code>request 请求</code>、<code>模板文件</code>和<code>参数</code>传入传递函数<code>render</code>渲染后返回</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp.models <span class=\"keyword\">import</span> Article</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    posts_list = Article.objects.all()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">'home.html'</span>, &#123;<span class=\"string\">'post_list'</span> : post_list&#125;)</span><br></pre></td></tr></table></figure>\n<p>在<code>templates</code>文件夹编写<code>home.html</code>文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% for post in post_list %&#125;</span><br><span class=\"line\">        标题：<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123; post.id &#125;&#125;\"</span>&gt;</span>&#123;&#123; post.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        发布时间： <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-author\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>&#123;&#123; post.publish_time |date:\"Y/m/d\"&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        分类： <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-category post-category-yui\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/categories/\"</span>&gt;</span>&#123;&#123; post.category &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        正文： <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; post.content &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","excerpt":"<h1 id=\"网页程序的逻辑\"><a href=\"#网页程序的逻辑\" class=\"headerlink\" title=\"网页程序的逻辑\"></a>网页程序的逻辑</h1><p>先看一下 Django 处理请求的流程</p>\n<img src=\"/2016/09/05/搭建Django博客（3）网页处理逻辑/flow.png\" alt=\"Django 请求处理流程\" title=\"Django 请求处理流程\">\n<p>request 进来–&gt;<code>urls.py</code>根据 url 指配处理函数–&gt;<code>views.py</code>处理 request 请求–&gt;返回 response</p>","more":"<h1 id=\"URL-调度器-urls-py\"><a href=\"#URL-调度器-urls-py\" class=\"headerlink\" title=\"URL 调度器 urls.py\"></a>URL 调度器 urls.py</h1><p>编写<code>urls.py</code>将 request 请求传递给<code>views.py</code>相应的函数处理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.conf.urls <span class=\"keyword\">import</span> url</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp <span class=\"keyword\">import</span> views</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(<span class=\"string\">r'^admin/'</span>, admin.site.urls),  <span class=\"comment\"># 匹配传递给管理页面函数</span></span><br><span class=\"line\">    url(<span class=\"string\">r'^$'</span>, views.home),  <span class=\"comment\"># 匹配传递给 home 视图函数</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h1 id=\"Views-视图函数-views-py\"><a href=\"#Views-视图函数-views-py\" class=\"headerlink\" title=\"Views 视图函数 views.py\"></a>Views 视图函数 views.py</h1><p>编写<code>views.py</code>处理由<code>urls.py</code>转来的 request 请求，home 视图函数处理完后返回 response</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> HttpResponse(<span class=\"string\">\"Hello World, Django\"</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"模板Templates\"><a href=\"#模板Templates\" class=\"headerlink\" title=\"模板Templates\"></a>模板Templates</h1><p>为了使返回的 response 达到更好的显示效果，可以让视图函数加载模板处理后再返回。</p>\n<p>在<code>setting.py</code>的 <code>TEMPLATES</code> 设置模板文件的存放路径</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">'templates'</span>)],  <span class=\"comment\"># 设置模板文件路径</span></span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>相应的也要修改 <code>views.py</code>中的视图函数，将<code>request 请求</code>、<code>模板文件</code>和<code>参数</code>传入传递函数<code>render</code>渲染后返回</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.shortcuts <span class=\"keyword\">import</span> render</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp.models <span class=\"keyword\">import</span> Article</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create your views here.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">home</span><span class=\"params\">(request)</span>:</span></span><br><span class=\"line\">    posts_list = Article.objects.all()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">'home.html'</span>, &#123;<span class=\"string\">'post_list'</span> : post_list&#125;)</span><br></pre></td></tr></table></figure>\n<p>在<code>templates</code>文件夹编写<code>home.html</code>文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% for post in post_list %&#125;</span><br><span class=\"line\">        标题：<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123; post.id &#125;&#125;\"</span>&gt;</span>&#123;&#123; post.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        发布时间： <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-author\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>&#123;&#123; post.publish_time |date:\"Y/m/d\"&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        分类： <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-category post-category-yui\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/categories/\"</span>&gt;</span>&#123;&#123; post.category &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        正文： <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; post.content &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"搭建Django博客（4）多说评论框","date":"2016-09-05T13:29:02.000Z","_content":"\n1. 注册[多说](http://duoshuo.com)账号，得到多说`short_name`\n\n2. 在`myblog/templates`文件夹新建`duoshuo.html`并加入代码\n\n\n<!--more-->\n\n\n   ```javascript\n   <!-- 多说评论框 start -->\n   \t    <div class=\"ds-thread\" data-thread-key=\"{{ post.id }}\" data-title=\"{{ post.title }}\"></div>\n   <!-- 多说评论框 end -->\n   <!-- 多说公共JS代码 start  -->\n   \t<script type=\"text/javascript\">\n         <!-- short_name 填自己的多说名字 -->\n   \tvar duoshuoQuery = {short_name:\"wish007\"};\n   \t    (function() {\n   \t        var ds = document.createElement('script');\n   \t        ds.type = 'text/javascript';ds.async = true;\n   \t        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\n   \t        ds.charset = 'UTF-8';\n   \t        (document.getElementsByTagName('head')[0]\n   \t         || document.getElementsByTagName('body')[0]).appendChild(ds);\n   \t    })();\n   \t    </script>\n   <!-- 多说公共JS代码 end -->\n   ```\n\n3. 在需要增加多说评论框的`</div>`标签前面添加以下代码\n\n   ```html\n   {% include \"duoshuo.html\" %}\n   ```","source":"_posts/搭建Django博客（4）多说评论框.md","raw":"---\ntitle: 搭建Django博客（4）多说评论框\ndate: 2016-09-05 21:29:02\ncategories: Django\ntags:\n- Django\n---\n\n1. 注册[多说](http://duoshuo.com)账号，得到多说`short_name`\n\n2. 在`myblog/templates`文件夹新建`duoshuo.html`并加入代码\n\n\n<!--more-->\n\n\n   ```javascript\n   <!-- 多说评论框 start -->\n   \t    <div class=\"ds-thread\" data-thread-key=\"{{ post.id }}\" data-title=\"{{ post.title }}\"></div>\n   <!-- 多说评论框 end -->\n   <!-- 多说公共JS代码 start  -->\n   \t<script type=\"text/javascript\">\n         <!-- short_name 填自己的多说名字 -->\n   \tvar duoshuoQuery = {short_name:\"wish007\"};\n   \t    (function() {\n   \t        var ds = document.createElement('script');\n   \t        ds.type = 'text/javascript';ds.async = true;\n   \t        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\n   \t        ds.charset = 'UTF-8';\n   \t        (document.getElementsByTagName('head')[0]\n   \t         || document.getElementsByTagName('body')[0]).appendChild(ds);\n   \t    })();\n   \t    </script>\n   <!-- 多说公共JS代码 end -->\n   ```\n\n3. 在需要增加多说评论框的`</div>`标签前面添加以下代码\n\n   ```html\n   {% include \"duoshuo.html\" %}\n   ```","slug":"搭建Django博客（4）多说评论框","published":1,"updated":"2016-09-07T16:39:17.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su1s00090ccexqh3y08f","content":"<ol>\n<li><p>注册<a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"external\">多说</a>账号，得到多说<code>short_name</code></p>\n</li>\n<li><p>在<code>myblog/templates</code>文件夹新建<code>duoshuo.html</code>并加入代码</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 多说评论框 start --&gt;</span><br><span class=\"line\">\t    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ds-thread\"</span> <span class=\"attr\">data-thread-key</span>=<span class=\"string\">\"&#123;&#123; post.id &#125;&#125;\"</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"&#123;&#123; post.title &#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- 多说评论框 end --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- 多说公共JS代码 start  --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">      &lt;!-- short_name 填自己的多说名字 --&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> duoshuoQuery = &#123;short_name:<span class=\"string\">\"wish007\"</span>&#125;;</span><br><span class=\"line\">\t    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t        <span class=\"keyword\">var</span> ds = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">\t        ds.type = <span class=\"string\">'text/javascript'</span>;ds.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t        ds.src = (<span class=\"built_in\">document</span>.location.protocol == <span class=\"string\">'https:'</span> ? <span class=\"string\">'https:'</span> : <span class=\"string\">'http:'</span>) + <span class=\"string\">'//static.duoshuo.com/embed.js'</span>;</span><br><span class=\"line\">\t        ds.charset = <span class=\"string\">'UTF-8'</span>;</span><br><span class=\"line\">\t        (<span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t         || <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'body'</span>)[<span class=\"number\">0</span>]).appendChild(ds);</span><br><span class=\"line\">\t    &#125;)();</span><br><span class=\"line\">\t    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多说公共JS代码 end --&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>在需要增加多说评论框的<code>&lt;/div&gt;</code>标签前面添加以下代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include \"duoshuo.html\" %&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"<ol>\n<li><p>注册<a href=\"http://duoshuo.com\">多说</a>账号，得到多说<code>short_name</code></p>\n</li>\n<li><p>在<code>myblog/templates</code>文件夹新建<code>duoshuo.html</code>并加入代码</p>\n</li>\n</ol>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 多说评论框 start --&gt;</span><br><span class=\"line\">\t    <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ds-thread\"</span> <span class=\"attr\">data-thread-key</span>=<span class=\"string\">\"&#123;&#123; post.id &#125;&#125;\"</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"&#123;&#123; post.title &#125;&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;!-- 多说评论框 end --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- 多说公共JS代码 start  --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">      &lt;!-- short_name 填自己的多说名字 --&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> duoshuoQuery = &#123;short_name:<span class=\"string\">\"wish007\"</span>&#125;;</span><br><span class=\"line\">\t    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t        <span class=\"keyword\">var</span> ds = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">\t        ds.type = <span class=\"string\">'text/javascript'</span>;ds.async = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t        ds.src = (<span class=\"built_in\">document</span>.location.protocol == <span class=\"string\">'https:'</span> ? <span class=\"string\">'https:'</span> : <span class=\"string\">'http:'</span>) + <span class=\"string\">'//static.duoshuo.com/embed.js'</span>;</span><br><span class=\"line\">\t        ds.charset = <span class=\"string\">'UTF-8'</span>;</span><br><span class=\"line\">\t        (<span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t         || <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'body'</span>)[<span class=\"number\">0</span>]).appendChild(ds);</span><br><span class=\"line\">\t    &#125;)();</span><br><span class=\"line\">\t    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 多说公共JS代码 end --&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>在需要增加多说评论框的<code>&lt;/div&gt;</code>标签前面添加以下代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include \"duoshuo.html\" %&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"搭建Django博客（6）代码高亮及后台Markdown编辑器","date":"2016-09-05T13:32:17.000Z","_content":"\n\n\n# 代码高亮\n\n安装语法高亮库 Pygments\n\n```powershell\n$ pip install Pygments\n```\n\n<!--more-->\n\n\n将 pygments 的 css 主题文件放到七牛云，可享受 CDN 加速，并在 base.html 的`<head>` `</head>`之间加入`<link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/monokai.css\">`\n\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta name=\"description\" content=\"A layout example that shows off a blog page with a list of posts.\">\n\n    <title>WISH007 Blog</title>\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.5.0/pure-min.css\">\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css\">\n    <link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/blog.css\">\n    <link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/monokai.css\">\n</head>\n```\n\n# 后台 Markdown 编辑器\n\n安装`django-pagedown`编辑器\n\n```powershell\npip3 install django-pagedown\n```\n在`setting.py`的`INSTALLED_APPS`添加`pagedown`\n```python\nINSTALLED_APPS = [\n    'blogapp',\n    'pagedown',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n```\n\n编辑`admin.py`\n\n```python\nfrom django.contrib import admin\nfrom blogapp.models import Article\nfrom pagedown.widgets import AdminPagedownWidget\nfrom django import forms\n\n# Define your form here.\nclass ArticleForm(forms.ModelForm):\n    content = forms.CharField(widget=AdminPagedownWidget())\n\n    class Meta:\n        model = Article\n        fields = '__all__'\n\nclass ArticleAdmin(admin.ModelAdmin):\n    form = ArticleForm\n\n# Register your models here.\nadmin.site.register(Article,ArticleAdmin)\n```","source":"_posts/搭建Django博客（6）代码高亮及后台Markdown编辑器.md","raw":"---\ntitle: 搭建Django博客（6）代码高亮及后台Markdown编辑器\ndate: 2016-09-05 21:32:17\ncategories: Django\ntags:\n- Django\n---\n\n\n\n# 代码高亮\n\n安装语法高亮库 Pygments\n\n```powershell\n$ pip install Pygments\n```\n\n<!--more-->\n\n\n将 pygments 的 css 主题文件放到七牛云，可享受 CDN 加速，并在 base.html 的`<head>` `</head>`之间加入`<link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/monokai.css\">`\n\n```html\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta name=\"description\" content=\"A layout example that shows off a blog page with a list of posts.\">\n\n    <title>WISH007 Blog</title>\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.5.0/pure-min.css\">\n    <link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css\">\n    <link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/blog.css\">\n    <link rel=\"stylesheet\" href=\"http://picturebag.qiniudn.com/monokai.css\">\n</head>\n```\n\n# 后台 Markdown 编辑器\n\n安装`django-pagedown`编辑器\n\n```powershell\npip3 install django-pagedown\n```\n在`setting.py`的`INSTALLED_APPS`添加`pagedown`\n```python\nINSTALLED_APPS = [\n    'blogapp',\n    'pagedown',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n```\n\n编辑`admin.py`\n\n```python\nfrom django.contrib import admin\nfrom blogapp.models import Article\nfrom pagedown.widgets import AdminPagedownWidget\nfrom django import forms\n\n# Define your form here.\nclass ArticleForm(forms.ModelForm):\n    content = forms.CharField(widget=AdminPagedownWidget())\n\n    class Meta:\n        model = Article\n        fields = '__all__'\n\nclass ArticleAdmin(admin.ModelAdmin):\n    form = ArticleForm\n\n# Register your models here.\nadmin.site.register(Article,ArticleAdmin)\n```","slug":"搭建Django博客（6）代码高亮及后台Markdown编辑器","published":1,"updated":"2016-09-07T16:36:53.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su28000c0ccef5d7c9uj","content":"<h1 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h1><p>安装语法高亮库 Pygments</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install Pygments</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>将 pygments 的 css 主题文件放到七牛云，可享受 CDN 加速，并在 base.html 的<code>&lt;head&gt;</code> <code>&lt;/head&gt;</code>之间加入<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://picturebag.qiniudn.com/monokai.css&quot;&gt;</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"A layout example that shows off a blog page with a list of posts.\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>WISH007 Blog<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://yui.yahooapis.com/pure/0.5.0/pure-min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://picturebag.qiniudn.com/blog.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://picturebag.qiniudn.com/monokai.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"后台-Markdown-编辑器\"><a href=\"#后台-Markdown-编辑器\" class=\"headerlink\" title=\"后台 Markdown 编辑器\"></a>后台 Markdown 编辑器</h1><p>安装<code>django-pagedown</code>编辑器</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install django-pagedown</span><br></pre></td></tr></table></figure>\n<p>在<code>setting.py</code>的<code>INSTALLED_APPS</code>添加<code>pagedown</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'blogapp'</span>,</span><br><span class=\"line\">    <span class=\"string\">'pagedown'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>编辑<code>admin.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp.models <span class=\"keyword\">import</span> Article</span><br><span class=\"line\"><span class=\"keyword\">from</span> pagedown.widgets <span class=\"keyword\">import</span> AdminPagedownWidget</span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> forms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define your form here.</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleForm</span><span class=\"params\">(forms.ModelForm)</span>:</span></span><br><span class=\"line\">    content = forms.CharField(widget=AdminPagedownWidget())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model = Article</span><br><span class=\"line\">        fields = <span class=\"string\">'__all__'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    form = ArticleForm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\">admin.site.register(Article,ArticleAdmin)</span><br></pre></td></tr></table></figure>","excerpt":"<h1 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h1><p>安装语法高亮库 Pygments</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install Pygments</span><br></pre></td></tr></table></figure>","more":"<p>将 pygments 的 css 主题文件放到七牛云，可享受 CDN 加速，并在 base.html 的<code>&lt;head&gt;</code> <code>&lt;/head&gt;</code>之间加入<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://picturebag.qiniudn.com/monokai.css&quot;&gt;</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"A layout example that shows off a blog page with a list of posts.\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>WISH007 Blog<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://yui.yahooapis.com/pure/0.5.0/pure-min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://yui.yahooapis.com/pure/0.5.0/grids-responsive-min.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://picturebag.qiniudn.com/blog.css\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://picturebag.qiniudn.com/monokai.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"后台-Markdown-编辑器\"><a href=\"#后台-Markdown-编辑器\" class=\"headerlink\" title=\"后台 Markdown 编辑器\"></a>后台 Markdown 编辑器</h1><p>安装<code>django-pagedown</code>编辑器</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install django-pagedown</span><br></pre></td></tr></table></figure>\n<p>在<code>setting.py</code>的<code>INSTALLED_APPS</code>添加<code>pagedown</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"string\">'blogapp'</span>,</span><br><span class=\"line\">    <span class=\"string\">'pagedown'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.admin'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.auth'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.contenttypes'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.sessions'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.messages'</span>,</span><br><span class=\"line\">    <span class=\"string\">'django.contrib.staticfiles'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>编辑<code>admin.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> blogapp.models <span class=\"keyword\">import</span> Article</span><br><span class=\"line\"><span class=\"keyword\">from</span> pagedown.widgets <span class=\"keyword\">import</span> AdminPagedownWidget</span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> forms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define your form here.</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleForm</span><span class=\"params\">(forms.ModelForm)</span>:</span></span><br><span class=\"line\">    content = forms.CharField(widget=AdminPagedownWidget())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span>:</span></span><br><span class=\"line\">        model = Article</span><br><span class=\"line\">        fields = <span class=\"string\">'__all__'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArticleAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    form = ArticleForm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\">admin.site.register(Article,ArticleAdmin)</span><br></pre></td></tr></table></figure>"},{"title":"搭建Django博客（5）Markdown语法显示文章","date":"2016-09-05T13:30:40.000Z","_content":"\n安装 Markdown 库\n\n```powershell\n$ pip install markdown2\n```\n\n\n<!--more-->\n\n\n在 blogapp 下建立新文件夹`templatetags`，然后定义自己的 template filter，在`templatetags`中新建`_init.py`, 让文件夹可以被看做一个包，在文件夹中新建`custom_markdown.py`文件并编辑\n\n```python\nimport markdown2\nfrom django import template\nfrom django.template.defaultfilters import stringfilter\nfrom django.utils.encoding import force_text\nfrom django.utils.safestring import mark_safe\n\nregister = template.Library()\n\n@register.filter(is_safe=True)\n@stringfilter\ndef custom_markdown(value):\n    return mark_safe(markdown2.markdown(force_text(value), extras=[\"fenced-code-blocks\", \"cuddled-lists\", \"metadata\", \"tables\", \"spoiler\"]))\n```\n\n对模板文件中需要 Markdown 显示的地方增加`custom_markdown`过滤器\n\n```html\n{% load custom_markdown %}\n.\n.\n.\n{{ post.content|custom_markdown }}\n```","source":"_posts/搭建Django博客（5）Markdown语法显示文章.md","raw":"---\ntitle: 搭建Django博客（5）Markdown语法显示文章\ndate: 2016-09-05 21:30:40\ncategories: Django\ntags:\n- Django\n---\n\n安装 Markdown 库\n\n```powershell\n$ pip install markdown2\n```\n\n\n<!--more-->\n\n\n在 blogapp 下建立新文件夹`templatetags`，然后定义自己的 template filter，在`templatetags`中新建`_init.py`, 让文件夹可以被看做一个包，在文件夹中新建`custom_markdown.py`文件并编辑\n\n```python\nimport markdown2\nfrom django import template\nfrom django.template.defaultfilters import stringfilter\nfrom django.utils.encoding import force_text\nfrom django.utils.safestring import mark_safe\n\nregister = template.Library()\n\n@register.filter(is_safe=True)\n@stringfilter\ndef custom_markdown(value):\n    return mark_safe(markdown2.markdown(force_text(value), extras=[\"fenced-code-blocks\", \"cuddled-lists\", \"metadata\", \"tables\", \"spoiler\"]))\n```\n\n对模板文件中需要 Markdown 显示的地方增加`custom_markdown`过滤器\n\n```html\n{% load custom_markdown %}\n.\n.\n.\n{{ post.content|custom_markdown }}\n```","slug":"搭建Django博客（5）Markdown语法显示文章","published":1,"updated":"2016-09-07T16:37:31.659Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su28000g0ccebq7tx7h5","content":"<p>安装 Markdown 库</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install markdown2</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>在 blogapp 下建立新文件夹<code>templatetags</code>，然后定义自己的 template filter，在<code>templatetags</code>中新建<code>_init.py</code>, 让文件夹可以被看做一个包，在文件夹中新建<code>custom_markdown.py</code>文件并编辑</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> markdown2</span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> template</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.template.defaultfilters <span class=\"keyword\">import</span> stringfilter</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.encoding <span class=\"keyword\">import</span> force_text</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.safestring <span class=\"keyword\">import</span> mark_safe</span><br><span class=\"line\"></span><br><span class=\"line\">register = template.Library()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@register.filter(is_safe=True)</span></span><br><span class=\"line\"><span class=\"meta\">@stringfilter</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">custom_markdown</span><span class=\"params\">(value)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> mark_safe(markdown2.markdown(force_text(value), extras=[<span class=\"string\">\"fenced-code-blocks\"</span>, <span class=\"string\">\"cuddled-lists\"</span>, <span class=\"string\">\"metadata\"</span>, <span class=\"string\">\"tables\"</span>, <span class=\"string\">\"spoiler\"</span>]))</span><br></pre></td></tr></table></figure>\n<p>对模板文件中需要 Markdown 显示的地方增加<code>custom_markdown</code>过滤器</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load custom_markdown %&#125;</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">&#123;&#123; post.content|custom_markdown &#125;&#125;</span><br></pre></td></tr></table></figure>","excerpt":"<p>安装 Markdown 库</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install markdown2</span><br></pre></td></tr></table></figure>","more":"<p>在 blogapp 下建立新文件夹<code>templatetags</code>，然后定义自己的 template filter，在<code>templatetags</code>中新建<code>_init.py</code>, 让文件夹可以被看做一个包，在文件夹中新建<code>custom_markdown.py</code>文件并编辑</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> markdown2</span><br><span class=\"line\"><span class=\"keyword\">from</span> django <span class=\"keyword\">import</span> template</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.template.defaultfilters <span class=\"keyword\">import</span> stringfilter</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.encoding <span class=\"keyword\">import</span> force_text</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils.safestring <span class=\"keyword\">import</span> mark_safe</span><br><span class=\"line\"></span><br><span class=\"line\">register = template.Library()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@register.filter(is_safe=True)</span></span><br><span class=\"line\"><span class=\"meta\">@stringfilter</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">custom_markdown</span><span class=\"params\">(value)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> mark_safe(markdown2.markdown(force_text(value), extras=[<span class=\"string\">\"fenced-code-blocks\"</span>, <span class=\"string\">\"cuddled-lists\"</span>, <span class=\"string\">\"metadata\"</span>, <span class=\"string\">\"tables\"</span>, <span class=\"string\">\"spoiler\"</span>]))</span><br></pre></td></tr></table></figure>\n<p>对模板文件中需要 Markdown 显示的地方增加<code>custom_markdown</code>过滤器</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load custom_markdown %&#125;</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">&#123;&#123; post.content|custom_markdown &#125;&#125;</span><br></pre></td></tr></table></figure>"},{"title":"搭建Django博客（7）Django博客搭建总结","date":"2016-09-05T13:34:48.000Z","_content":"\n# 项目地址\n\n[GitHub wish007/django_blog](https://github.com/wish007/django_blog)\n\n# 效果展示\n\n{% asset_img home.png Home page %}\n\n<!--more-->\n\n{% asset_img archives.png Archives page %}\n\n{% asset_img post.png Post page %}\n\n\n# TO DO\n\n- 增加 ABOUT ME 页面\n- 优化 CATEGORIES 页面\n- 将博客部署到 VPS\n\n# 参考资料\n\n官方文档： https://docs.djangoproject.com/\n\n中文文档： http://python.usyiyi.cn/django/index.html\n\nDjango Book： http://djangobook.py3k.cn/2.0/\n\nandrew.liu 的教程： https://andrew-liu.gitbooks.io/django-blog/content/\n\nPure.css 官网： http://purecss.io/\n\n中文 Pure.css 网站： http://www.purecss.org/\n\nPure.css 调试网站： https://codepen.io/teamgroove/pen/vrdHu","source":"_posts/搭建Django博客（7）Django 博客搭建总结.md","raw":"---\ntitle: 搭建Django博客（7）Django博客搭建总结\ndate: 2016-09-05 21:34:48\ncategories: Django\ntags:\n- Django\n---\n\n# 项目地址\n\n[GitHub wish007/django_blog](https://github.com/wish007/django_blog)\n\n# 效果展示\n\n{% asset_img home.png Home page %}\n\n<!--more-->\n\n{% asset_img archives.png Archives page %}\n\n{% asset_img post.png Post page %}\n\n\n# TO DO\n\n- 增加 ABOUT ME 页面\n- 优化 CATEGORIES 页面\n- 将博客部署到 VPS\n\n# 参考资料\n\n官方文档： https://docs.djangoproject.com/\n\n中文文档： http://python.usyiyi.cn/django/index.html\n\nDjango Book： http://djangobook.py3k.cn/2.0/\n\nandrew.liu 的教程： https://andrew-liu.gitbooks.io/django-blog/content/\n\nPure.css 官网： http://purecss.io/\n\n中文 Pure.css 网站： http://www.purecss.org/\n\nPure.css 调试网站： https://codepen.io/teamgroove/pen/vrdHu","slug":"搭建Django博客（7）Django 博客搭建总结","published":1,"updated":"2016-09-09T16:15:39.342Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su28000k0ccext97okga","content":"<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://github.com/wish007/django_blog\" target=\"_blank\" rel=\"external\">GitHub wish007/django_blog</a></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/home.png\" alt=\"Home page\" title=\"Home page\">\n<a id=\"more\"></a>\n<img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/archives.png\" alt=\"Archives page\" title=\"Archives page\">\n<img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/post.png\" alt=\"Post page\" title=\"Post page\">\n<h1 id=\"TO-DO\"><a href=\"#TO-DO\" class=\"headerlink\" title=\"TO DO\"></a>TO DO</h1><ul>\n<li>增加 ABOUT ME 页面</li>\n<li>优化 CATEGORIES 页面</li>\n<li>将博客部署到 VPS</li>\n</ul>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p>官方文档： <a href=\"https://docs.djangoproject.com/\" target=\"_blank\" rel=\"external\">https://docs.djangoproject.com/</a></p>\n<p>中文文档： <a href=\"http://python.usyiyi.cn/django/index.html\" target=\"_blank\" rel=\"external\">http://python.usyiyi.cn/django/index.html</a></p>\n<p>Django Book： <a href=\"http://djangobook.py3k.cn/2.0/\" target=\"_blank\" rel=\"external\">http://djangobook.py3k.cn/2.0/</a></p>\n<p>andrew.liu 的教程： <a href=\"https://andrew-liu.gitbooks.io/django-blog/content/\" target=\"_blank\" rel=\"external\">https://andrew-liu.gitbooks.io/django-blog/content/</a></p>\n<p>Pure.css 官网： <a href=\"http://purecss.io/\" target=\"_blank\" rel=\"external\">http://purecss.io/</a></p>\n<p>中文 Pure.css 网站： <a href=\"http://www.purecss.org/\" target=\"_blank\" rel=\"external\">http://www.purecss.org/</a></p>\n<p>Pure.css 调试网站： <a href=\"https://codepen.io/teamgroove/pen/vrdHu\" target=\"_blank\" rel=\"external\">https://codepen.io/teamgroove/pen/vrdHu</a></p>\n","excerpt":"<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://github.com/wish007/django_blog\">GitHub wish007/django_blog</a></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/home.png\" alt=\"Home page\" title=\"Home page\">","more":"<img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/archives.png\" alt=\"Archives page\" title=\"Archives page\">\n<img src=\"/2016/09/05/搭建Django博客（7）Django%20博客搭建总结/post.png\" alt=\"Post page\" title=\"Post page\">\n<h1 id=\"TO-DO\"><a href=\"#TO-DO\" class=\"headerlink\" title=\"TO DO\"></a>TO DO</h1><ul>\n<li>增加 ABOUT ME 页面</li>\n<li>优化 CATEGORIES 页面</li>\n<li>将博客部署到 VPS</li>\n</ul>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><p>官方文档： <a href=\"https://docs.djangoproject.com/\">https://docs.djangoproject.com/</a></p>\n<p>中文文档： <a href=\"http://python.usyiyi.cn/django/index.html\">http://python.usyiyi.cn/django/index.html</a></p>\n<p>Django Book： <a href=\"http://djangobook.py3k.cn/2.0/\">http://djangobook.py3k.cn/2.0/</a></p>\n<p>andrew.liu 的教程： <a href=\"https://andrew-liu.gitbooks.io/django-blog/content/\">https://andrew-liu.gitbooks.io/django-blog/content/</a></p>\n<p>Pure.css 官网： <a href=\"http://purecss.io/\">http://purecss.io/</a></p>\n<p>中文 Pure.css 网站： <a href=\"http://www.purecss.org/\">http://www.purecss.org/</a></p>\n<p>Pure.css 调试网站： <a href=\"https://codepen.io/teamgroove/pen/vrdHu\">https://codepen.io/teamgroove/pen/vrdHu</a></p>"},{"title":"用Hexo写博客","date":"2016-09-03T14:50:33.000Z","_content":"\n# Hexo常用命令\n\n**创建新的 Hexo 网站**\n\n```bash\nhexo init [folder]\n或在当前目录下创建\nhexo init\n```\n\n**发表新文章**\n\n``` bash\nhexo new \"文章标题\"\n或\nhexo n \"文章标题\"\n```\n执行命令后会在 `Hexo/source/_posts` 文件夹生成 `文章标题.md` 的文件，再用编辑器打开编写；当然也可以直接在该目录创建 Markdown 文件。\n\n\n<!--more-->\n\n\n**生成 Hexo 博客静态文件**\n\n``` bash\nhexo generate\n或\nhexo g\n```\n\n**打开 Hexo 本地服务器**\n\n``` bash\nhexo server\n或\nhexo s\n```\n\n默认情况下，访问网址：http://localhost:4000/ ，即可在查看本地效果。\n\n**将博客部署到 GitHub**\n\n部署前要编辑 Hexo 站点配置文件 `Hexo/_config.yml`，这样 Hexo 才知道要将你的站点同步到哪里；下面的`repository:`后面记得替换成自己的 GitHub 仓库。\n\n```bash\ndeploy:\n  type: git\n  repository: https://github.com/wish007/wish007.github.io.git\n  branch: master\n```\n\n\n\n下面是部署的命令\n\n``` bash\n先清理缓存,有时会因为缓存无法更新主题,实际是删除 Hexo/public 文件夹\nhexo clean\n生成过静态文件可以直接部署\nhexo deploy\n或\nhexo d\n也可以重新生成静态文件并部署\nhexo g -d\n```\n\n部署到 GitHub 实际上是将 `hexo g` 命令生成的 `Hexo/public` 文件夹同步到 `GitHub用户名.github.io` 这个Repository.\n\n**Hexo 更多命令：https://hexo.io/zh-cn/docs/commands.html**","source":"_posts/用Hexo写博客.md","raw":"---\ntitle: 用Hexo写博客\ndate: 2016-09-03 22:50:33\ncategories: Hexo\ntags:\n- Hexo\n---\n\n# Hexo常用命令\n\n**创建新的 Hexo 网站**\n\n```bash\nhexo init [folder]\n或在当前目录下创建\nhexo init\n```\n\n**发表新文章**\n\n``` bash\nhexo new \"文章标题\"\n或\nhexo n \"文章标题\"\n```\n执行命令后会在 `Hexo/source/_posts` 文件夹生成 `文章标题.md` 的文件，再用编辑器打开编写；当然也可以直接在该目录创建 Markdown 文件。\n\n\n<!--more-->\n\n\n**生成 Hexo 博客静态文件**\n\n``` bash\nhexo generate\n或\nhexo g\n```\n\n**打开 Hexo 本地服务器**\n\n``` bash\nhexo server\n或\nhexo s\n```\n\n默认情况下，访问网址：http://localhost:4000/ ，即可在查看本地效果。\n\n**将博客部署到 GitHub**\n\n部署前要编辑 Hexo 站点配置文件 `Hexo/_config.yml`，这样 Hexo 才知道要将你的站点同步到哪里；下面的`repository:`后面记得替换成自己的 GitHub 仓库。\n\n```bash\ndeploy:\n  type: git\n  repository: https://github.com/wish007/wish007.github.io.git\n  branch: master\n```\n\n\n\n下面是部署的命令\n\n``` bash\n先清理缓存,有时会因为缓存无法更新主题,实际是删除 Hexo/public 文件夹\nhexo clean\n生成过静态文件可以直接部署\nhexo deploy\n或\nhexo d\n也可以重新生成静态文件并部署\nhexo g -d\n```\n\n部署到 GitHub 实际上是将 `hexo g` 命令生成的 `Hexo/public` 文件夹同步到 `GitHub用户名.github.io` 这个Repository.\n\n**Hexo 更多命令：https://hexo.io/zh-cn/docs/commands.html**","slug":"用Hexo写博客","published":1,"updated":"2016-09-07T16:36:12.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisw0su2o000n0ccel0lbx3p8","content":"<h1 id=\"Hexo常用命令\"><a href=\"#Hexo常用命令\" class=\"headerlink\" title=\"Hexo常用命令\"></a>Hexo常用命令</h1><p><strong>创建新的 Hexo 网站</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [folder]</span><br><span class=\"line\">或在当前目录下创建</span><br><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p><strong>发表新文章</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"文章标题\"</span></span><br><span class=\"line\">或</span><br><span class=\"line\">hexo n <span class=\"string\">\"文章标题\"</span></span><br></pre></td></tr></table></figure>\n<p>执行命令后会在 <code>Hexo/source/_posts</code> 文件夹生成 <code>文章标题.md</code> 的文件，再用编辑器打开编写；当然也可以直接在该目录创建 Markdown 文件。</p>\n<a id=\"more\"></a>\n<p><strong>生成 Hexo 博客静态文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<p><strong>打开 Hexo 本地服务器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>默认情况下，访问网址：<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a> ，即可在查看本地效果。</p>\n<p><strong>将博客部署到 GitHub</strong></p>\n<p>部署前要编辑 Hexo 站点配置文件 <code>Hexo/_config.yml</code>，这样 Hexo 才知道要将你的站点同步到哪里；下面的<code>repository:</code>后面记得替换成自己的 GitHub 仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: https://github.com/wish007/wish007.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>下面是部署的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先清理缓存,有时会因为缓存无法更新主题,实际是删除 Hexo/public 文件夹</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">生成过静态文件可以直接部署</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo d</span><br><span class=\"line\">也可以重新生成静态文件并部署</span><br><span class=\"line\">hexo g <span class=\"_\">-d</span></span><br></pre></td></tr></table></figure>\n<p>部署到 GitHub 实际上是将 <code>hexo g</code> 命令生成的 <code>Hexo/public</code> 文件夹同步到 <code>GitHub用户名.github.io</code> 这个Repository.</p>\n<p><strong>Hexo 更多命令：<a href=\"https://hexo.io/zh-cn/docs/commands.html\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/commands.html</a></strong></p>\n","excerpt":"<h1 id=\"Hexo常用命令\"><a href=\"#Hexo常用命令\" class=\"headerlink\" title=\"Hexo常用命令\"></a>Hexo常用命令</h1><p><strong>创建新的 Hexo 网站</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [folder]</span><br><span class=\"line\">或在当前目录下创建</span><br><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p><strong>发表新文章</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"文章标题\"</span></span><br><span class=\"line\">或</span><br><span class=\"line\">hexo n <span class=\"string\">\"文章标题\"</span></span><br></pre></td></tr></table></figure>\n<p>执行命令后会在 <code>Hexo/source/_posts</code> 文件夹生成 <code>文章标题.md</code> 的文件，再用编辑器打开编写；当然也可以直接在该目录创建 Markdown 文件。</p>","more":"<p><strong>生成 Hexo 博客静态文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<p><strong>打开 Hexo 本地服务器</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>默认情况下，访问网址：<a href=\"http://localhost:4000/\">http://localhost:4000/</a> ，即可在查看本地效果。</p>\n<p><strong>将博客部署到 GitHub</strong></p>\n<p>部署前要编辑 Hexo 站点配置文件 <code>Hexo/_config.yml</code>，这样 Hexo 才知道要将你的站点同步到哪里；下面的<code>repository:</code>后面记得替换成自己的 GitHub 仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repository: https://github.com/wish007/wish007.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>下面是部署的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先清理缓存,有时会因为缓存无法更新主题,实际是删除 Hexo/public 文件夹</span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">生成过静态文件可以直接部署</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\">或</span><br><span class=\"line\">hexo d</span><br><span class=\"line\">也可以重新生成静态文件并部署</span><br><span class=\"line\">hexo g <span class=\"_\">-d</span></span><br></pre></td></tr></table></figure>\n<p>部署到 GitHub 实际上是将 <code>hexo g</code> 命令生成的 <code>Hexo/public</code> 文件夹同步到 <code>GitHub用户名.github.io</code> 这个Repository.</p>\n<p><strong>Hexo 更多命令：<a href=\"https://hexo.io/zh-cn/docs/commands.html\">https://hexo.io/zh-cn/docs/commands.html</a></strong></p>"}],"PostAsset":[{"_id":"source/_posts/搭建Django博客（3）网页处理逻辑/flow.png","slug":"flow.png","post":"cisw0su1s00070cce8y1d04hz","modified":1,"renderable":0},{"_id":"source/_posts/搭建Django博客（1）环境准备与连接数据库/WelcomeToDjango.png","post":"cisw0su1d00020ccekhyyky5o","slug":"WelcomeToDjango.png","modified":1,"renderable":1},{"_id":"source/_posts/在Hexo中插入图片/mountain.jpg","slug":"mountain.jpg","post":"cisw0su1s00060ccehbms1yyt","modified":1,"renderable":0},{"_id":"source/_posts/搭建Django博客（2）创建数据模型/admin.png","post":"cisw0su1d00000ccekgcc5thp","slug":"admin.png","modified":1,"renderable":1},{"_id":"source/_posts/搭建Django博客（2）创建数据模型/login.png","post":"cisw0su1d00000ccekgcc5thp","slug":"login.png","modified":1,"renderable":1},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/archives.png","post":"cisw0su28000k0ccext97okga","slug":"archives.png","modified":1,"renderable":1},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/home.png","post":"cisw0su28000k0ccext97okga","slug":"home.png","modified":1,"renderable":1},{"_id":"source/_posts/搭建Django博客（7）Django 博客搭建总结/post.png","post":"cisw0su28000k0ccext97okga","slug":"post.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cisw0su1s00070cce8y1d04hz","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su28000e0ccevtxic967"},{"post_id":"cisw0su1d00000ccekgcc5thp","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su28000j0ccejh19peyn"},{"post_id":"cisw0su1s00090ccexqh3y08f","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su2o000m0cce1semxq6h"},{"post_id":"cisw0su28000c0ccef5d7c9uj","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su2o000p0ccegwmtfpqu"},{"post_id":"cisw0su1d00020ccekhyyky5o","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su2o000r0ccea0niezws"},{"post_id":"cisw0su28000g0ccebq7tx7h5","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su2o000t0ccex6i6uzzb"},{"post_id":"cisw0su28000k0ccext97okga","category_id":"cisw0su1s00050ccepr9ezot5","_id":"cisw0su2o000v0cce1qqksjtd"},{"post_id":"cisw0su1s00060ccehbms1yyt","category_id":"cisw0su28000h0cceeegnyvxn","_id":"cisw0su2o000x0cce1vi8zszh"},{"post_id":"cisw0su2o000n0ccel0lbx3p8","category_id":"cisw0su28000h0cceeegnyvxn","_id":"cisw0su33000y0ccecj72bi3t"}],"PostTag":[{"post_id":"cisw0su1s00070cce8y1d04hz","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su28000b0ccem7xdp88i"},{"post_id":"cisw0su1d00000ccekgcc5thp","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su28000d0cce158fpkxs"},{"post_id":"cisw0su1s00090ccexqh3y08f","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su28000i0cceg76ifpno"},{"post_id":"cisw0su28000c0ccef5d7c9uj","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su2o000l0ccejm75kuao"},{"post_id":"cisw0su1d00020ccekhyyky5o","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su2o000o0ccex9ccp6fi"},{"post_id":"cisw0su28000g0ccebq7tx7h5","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su2o000q0ccena8hgkwh"},{"post_id":"cisw0su28000k0ccext97okga","tag_id":"cisw0su1d00040ccev7qbab8e","_id":"cisw0su2o000s0cceajbl43pf"},{"post_id":"cisw0su1s00060ccehbms1yyt","tag_id":"cisw0su28000f0cceszr6ppuc","_id":"cisw0su2o000u0cceliqygduu"},{"post_id":"cisw0su2o000n0ccel0lbx3p8","tag_id":"cisw0su28000f0cceszr6ppuc","_id":"cisw0su2o000w0ccew26r341r"}],"Tag":[{"name":"Django","_id":"cisw0su1d00040ccev7qbab8e"},{"name":"Hexo","_id":"cisw0su28000f0cceszr6ppuc"}]}}